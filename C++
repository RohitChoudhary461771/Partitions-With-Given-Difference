#include <bits/stdc++.h>
int mod=1e9+7;
int f(int n,int target,vector<int>&arr,vector<vector<int>>&dp){
    if(n==0){
        if(target==0 && arr[0]==0)return 2;
        if(target==0 || target==arr[0] )return 1;

        else return false;
    }
    if(dp[n][target]!=-1)return dp[n][target];

    int nTake=f(n-1,target,arr,dp);
    int take=0;
    if(arr[n]<=target){
        take=f(n-1,target-arr[n],arr,dp);
    }

    return dp[n][target]=(nTake+take)%mod;
}
int countPartitions(int n, int d, vector<int> &arr) {
    // Write your code here.
    sort(arr.begin(),arr.end());
    int totalsum=0;
    for(auto it :arr){
        totalsum+=it;
    }
    if(totalsum-d<0)return 0;
    if((totalsum-d)%2==1)return 0;

    int target=(totalsum-d)/2;

    vector<vector<int>>dp(n,vector<int>(target+1,-1));

    return f(n-1,target,arr,dp);

}


